version: "3.4"


services:
  calery_w:
    build:
      context: .
      dockerfile: compose/celery/Dockerfile
    container_name: worker
    depends_on:
      - redis
      - db
      - mongo
    volumes:
      - ./src:/src
    env_file:
      - ./envs/db_keys
      - ./envs/mongo_keys
    command : ["sh", "-c", "celery -A birthdays worker --loglevel=INFO"]

  jupyter:
    build:
      context: .
      dockerfile: compose/celery/Dockerfile
    container_name: notebook 
    env_file:
      - ./envs/db_keys
      - ./envs/mongo_keys
    ports:
      - "8888:8888"
    volumes:
      - ./src:/src
    depends_on:
      - db
      - redis
      - mongo
    command : ["sh", "-c", "jupyter notebook --allow-root --ip 0.0.0.0 --port 8888"]

  db:
    image: postgres
    container_name: postgres
    env_file:
      - ./envs/db_keys
    volumes:
      - /psql_db/postgres_data:/var/lib/postgresql/data
      - /psql_db/postgres_data_backups:/backups

  adminer:
    image: adminer
    container_name: admin
    ports:
      - "8080:8080"

  redis:
    image: redis:3.2-alpine
    container_name: redis
    volumes:
      - ./redis_data:/data

  mongo:
    image: mongo
    env_file:
      - ./envs/mongo_keys

  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example

